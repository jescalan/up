// -----------------------------------------------------
// Typography
// -----------------------------------------------------

// Mixin: Text Margin
// Pass this guy a font size (pixels - no units) and he will apply margins to the element at a ratio
// most pleasing to the gods.
// ex. +text-margin(14)

=text-margin($size)
  margin: #{$size/1.2}px 0

// Mixin: P
// Takes care of all your paragraph needs. Pass it an optional size and it will
// do some golden ratio math and give you a nice line height. Pass it a width and it will
// be even more accurate. And you can turn off margins if you'd like too.

// math via http://www.pearsonified.com/2011/12/golden-ratio-typography.php

// ex. +p
// ex. +p(18)
// ex. +p(14, true, 500px)

=p($size: $font-size, $margins: true, $width: false)

  $gr: 1.61803399
  $height: $size * $gr

  @if $width
    $height: $gr - (1 / (2 * $gr)) * (1 - $width / ($width * $gr))
    width: $width

  @if $margins
    +text-margin($size)
  
  line-height: #{round($height)}px
  font-size: $size + px
  font-size: $size*.0615384 + rem // this is questionable, so be careful

// Mixin: Size
// An alias for 'font-size'
// ex. +size(16px)

=size($size)
  font-size: $size

// Mixin: Fs
// An alias for 'font-size'
// ex. +size(16px)

=fs($size)
  font-size: $size

// Mixin: Uppercase
// An alias for 'text-transform: uppercase'
// ex. +uppercase

=uppercase
  text-transform: uppercase

// Mixin: Upcase
// An alias for 'text-transform: uppercase'
// ex. +upcase

=upcase
  +uppercase

// Mixin: Lowercase
// An alias for 'text-transform: lowercase'
// ex. +lowercase

=lowercase
  text-transform: lowercase

// Mixin: Downcase
// An alias for 'text-transform: lowercase'
// ex. +downcase

=downcase
  +lowercase

// Mixin: Small
// Makes your text smaller and a little lighter. Great on <small /> tags.
// ex. +small

=small
  font-size: 55%
  opacity: .6
  font-weight: normal

// Internal Mixin: Heading
// For internal use within headings

=heading($color: #333)
  color: $color
  text-rendering: optimizelegibility
  font-weight: bold

// Internal Mixin: Heading Size
// Gives your headings ratios custom crafted in house from the finest stock of mathematics.
// Feed it a size and it will get you rem and some nice header-y margins.

=heading-size($size)
  font-size: $size + px
  font-size: $size*.0615384 + rem // this is questionable
  +text-margin($size/2)

// Mixin Set: h1, h2, h3, h4, h5, h6
// These provide nice defaults for headings based off the default font size.
// The can scale infinitely, and work best when matched to their corresponding html elements.
// ex. +h3

=h1
  +heading
  +heading-size($font-size*2.4)
  line-height: 1.2em

=h2
  +heading
  +heading-size($font-size*1.8)
  line-height: 1.2em

=h3
  +heading
  +heading-size($font-size*1.5)
  line-height: 1.2em

=h4
  +heading
  +heading-size($font-size*1.3)
  line-height: 1.2em

=h5
  +heading
  +heading-size($font-size)
  line-height: 1.2em

=h6
  +heading
  +heading-size($font-size*.9)
  text-transform: uppercase
  line-height: 1.2em

// Mixin: Link
// A nice default style for links. Accepts a color and a style. Color can be anything,
// style can be underline, darken, lighten, or glow, each giving it a different style
// of interaction when hovered. More suggestions here welcome.
// ex. +link
// ex. +link($green)
// ex. +link(#57777E, glow)

=link($color: $blue, $style: underline)
  color: $color
  text-decoration: none
  +transition
  @if $style == underline
    +hover-darken($color)
    +hover-underline
  @else if $style == darken
    +hover-darken($color, 20%)
  @else if $style == lighten
    +hover-lighten($color)
  @else if $style == glow
    &:hover
      text-shadow: 0 0 7px rgba($color, .6)
  &:visited
    opacity: .8

// Mixin: Reset Link
// Sometimes my link mixin of the browser defaults will give you questionable link defaults
// that you don't want on certain elements. This guy gets rid of that.
// ex. +reset-link

=reset-link
  color: inherit
  border: none
  text-decoration: none
  &:hover
    color: inherit
    border: none
    text-decoration: none
  &:visited
    opacity: 1

// Mixin: Text Selection
// This guy sets the text select color intelligently based on the $hilight-color variable
// found in _roots.sass. If you really want, you can pass it a color override too
// ex. +text-selection()

=text-selection($color: $hilight-color)
  
  $dark-text: if( lightness($color) < 60%, true, false )
  $text-color: if( $dark-text, $white, #494949 )
  
  ::-moz-selection
    background: $color
    color: $text-color
  ::selection
    background: $color
    color: $text-color

// Mixin: Ul
// A nice default for list styles. More or less the same as browser defaults, scales nicely.
// You can pass it any style that list-style-type would normally take. Defaults to disc.
// Use this on a ul element por favor.
// ex. +ul
// ex. +ul(square)

=ul($style: disc)
  margin: 5px 15px
  padding-left: 1em
  li
    list-style-type: $style
    padding: 2px 0

// Mixin: Ol
// A nice default for list styles. More or less the same as browser defaults, scales nicely.
// You can pass it any style that list-style-type would normally take. Defaults to decimal.
// Use this on a ol element por favor.
// ex. +ol
// ex. +ol(upper-roman)

=ol($style: decimal)
  margin: 5px 18px
  padding-left: 1em
  li
    list-style-type: $style
    padding: 2px 0

// Mixin: Inline List
// For when you need your list to be horizontal. Pass it the spacing you want between list
// elements, whatever units you'd like. Defaults to 20px
// ex. +inline-list
// ex. +inline-list(15px)

=inline-list($spacing: 20px)
  +group
  margin: 0
  padding: 0
  li
    float: left
    margin-right: $spacing
    list-style-type: none
  li:last-child
    margin-right: 0

// Mixin: Reset List
// If you're tired of all the list shenanigans and want to get rid of them for this special
// list you're working on, this is your guy. Resets the margins, padding, and style.
// ex. +reset-list

=reset-list
  margin: 0
  padding: 0
  li
    list-style-type: none
    padding: 0
    margin: 0

// Mixin: Blockquote
// Nice styles for a blockquote, and even puts a nice hyphen in before your citation.
// Use with a <p> and <cite> inside for best results.
// ex. +blockquote

// TODO: Add a couple different styles here

=blockquote
  p
    font-weight: 300
    font-size: 127%
    line-height: 127%
  cite
    color: #888888
    &:before
      content: '\2014'

// -----------------------------------------------------
// Mixins that add styles to tags on your page actively
// -----------------------------------------------------

// Additive Mixin: Base
// WARNING: Creates classes in your css and styles them - not to be used inside an element.
// This is an essential mixin. You want this on your page. Sets your font stack,
// size, and colors based on the settings file and makes sure that your text is a great looking
// as possible. You can override any of the params, but there is really no reason to.
// ex. +base

=base($fonts: $font-stack, $size: $font-size, $color: $font-color)
  body
    font-family: $fonts
    font-size: #{$size*6.46}unquote("%")
    font-size: #{$size}px
    color: $color
    -webkit-font-smoothing: antialiased
    -webkit-text-size-adjust: 100%
    -ms-text-size-adjust: 100%

// Additive Mixin: Headers
// WARNING: Creates classes in your css and styles them - not to be used inside an element.
// Adds roots' wonderful scaling header styles to your <hx> tags.
// ex. +headers

=headers
  h1
    +h1

  h2
    +h2

  h3
    +h3

  h4
    +h4

  h5
    +h5

  h6
    +h6

// Additive Mixin: Lists
// WARNING: Creates classes in your css and styles them - not to be used inside an element.
// Adds roots styles to ul and ols.
// ex. +lists

=lists
  ul
    +ul
  ol
    +ol

// Additive Mixin: Bold-Italic
// WARNING: Creates classes in your css and styles them - not to be used inside an element.
// Adds in bold and italic styles to the right tags if you did a page reset.
// ex. +bold-italic

=bold-italic
  b
    +bold
  i
    +italic
  strong
    +bold
  em
    +italic

// Additive Mixin: Typography
// WARNING: Creates classes in your css and styles them - not to be used inside an element.
// Adds roots styles to bold and italic elements, headers, paragrapgs, small text, links, lists,
// and blockquotes. Got all your basic elements covered.
// ex. +typography

=typography
  +bold-italic
  +headers
  +text-selection
  +lists

  p
    +p($font-size)
  small
    +small
  a
    +link
  blockquote
    +blockquote